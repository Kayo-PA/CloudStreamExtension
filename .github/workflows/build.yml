name: Build

concurrency:
  group: "build"
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "*.md"
      - "*.yaml"

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: "src"

      - name: Checkout builds
        uses: actions/checkout@v4
        with:
          ref: "builds"
          path: "builds"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean old builds
        run: rm -f $GITHUB_WORKSPACE/builds/*.cs3

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Access Secrets
        run: |
          cd $GITHUB_WORKSPACE/src
          {
            echo "TMDB_API=${{ secrets.TMDB_API }}"
            echo "DUMP_API=${{ secrets.DUMP_API }}"
            echo "DUMP_KEY=${{ secrets.DUMP_KEY }}"
            echo "CRUNCHYROLL_BASIC_TOKEN=${{ secrets.CRUNCHYROLL_BASIC_TOKEN }}"
            echo "CRUNCHYROLL_REFRESH_TOKEN=${{ secrets.CRUNCHYROLL_REFRESH_TOKEN }}"
            echo "ANICHI_API=${{ secrets.ANICHI_API }}"
            echo "ANICHI_SERVER=${{ secrets.ANICHI_SERVER }}"
            echo "ANICHI_ENDPOINT=${{ secrets.ANICHI_ENDPOINT }}"
            echo "ANICHI_APP=${{ secrets.ANICHI_APP }}"
            echo "ZSHOW_API=${{ secrets.ZSHOW_API }}"
            echo "SFMOVIES_API=${{ secrets.SFMOVIES_API }}"
            echo "CINEMATV_API=${{ secrets.CINEMATV_API }}"
            echo "GHOSTX_API=${{ secrets.GHOSTX_API }}"
            echo "SUPERSTREAM_FIRST_API=${{ secrets.SUPERSTREAM_FIRST_API }}"
            echo "SUPERSTREAM_SECOND_API=${{ secrets.SUPERSTREAM_SECOND_API }}"
            echo "SUPERSTREAM_THIRD_API=${{ secrets.SUPERSTREAM_THIRD_API }}"
            echo "SUPERSTREAM_FOURTH_API=${{ secrets.SUPERSTREAM_FOURTH_API }}"
            echo "SIMKL_API=${{ secrets.SIMKL_API }}"
            echo "MAL_API=${{ secrets.MAL_API }}"
          } >> local.properties

      - name: Build Plugins
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew --no-daemon --parallel --build-cache make makePluginsJson
          cp **/build/*.cs3 $GITHUB_WORKSPACE/builds
          cp build/plugins.json $GITHUB_WORKSPACE/builds

      - name: Push builds
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit --amend -m "Build $GITHUB_SHA" || exit 0
          git push --force
